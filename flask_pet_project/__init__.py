from . import dbase, auth, tests
from flask import Flask, render_template


def create_app(test_config=None):
    """This function creating the application, setting the configs, rendering the main page,
    initialising db-connection and registering blueprints"""

    app = Flask(__name__, instance_relative_config=True)

    app.config.from_mapping(
        # Secret key generated by os.urandom(16)
        SECRET_KEY='\x1a\xf6\xcb?"\x1aZz\xacdyz2\xef\xc0J',
        DATABASE='/pet_db.sqlite',
    )
    if test_config is None:
        app.config.from_pyfile('config.py', silent=True)
    else:
        app.config.from_mapping(test_config)

    @app.route('/')
    def index():
        try:
            db = dbase.get_db()
            db.cursor().execute('DELETE FROM tests WHERE status=?', ('incomplete',))
            db.commit()
        except:
            pass
        return render_template('index.html', title='Test yourself!')

    dbase.init_app(app)

    app.register_blueprint(auth.bp)
    app.register_blueprint(tests.bp)

    return app
